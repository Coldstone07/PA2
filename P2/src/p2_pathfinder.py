def find_path (source_point, destination_point, mesh):    print(source_point)    print(destination_point)    sol = []    for box in mesh["boxes"]:        x1, x2, y1, y2 = box        sx, sy = source_point        dx, dy = destination_point        if x1 <= sx < x2 and y1 <= sy < y2:            print("found source")            sol.append(box)        if x1 <= dx < x2 and y1 <= dy < y2:            print("found destination")            sol.append(box)    for solution in sol:        print(solution)        print(mesh["adj"][solution])    """    Searches for a path from source_point to destination_point through the mesh    Args:        source_point: starting point of the pathfinder        destination_point: the ultimate goal the pathfinder must reach        mesh: pathway constraints the path adheres to    Returns:        A path (list of points) from source_point to destination_point if exists        A list of boxes explored by the algorithm    """    path = []    boxes = {}    return path, boxes.keys()